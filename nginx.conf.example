# Exemplo de configuração Nginx para o Sistema Helpdesk
# Salve como: /etc/nginx/sites-available/helpdesk
# Ative com: sudo ln -s /etc/nginx/sites-available/helpdesk /etc/nginx/sites-enabled/

server {
    # Configuração HTTP (será redirecionado para HTTPS após SSL)
    listen 80;
    server_name seu-dominio.com www.seu-dominio.com;
    
    # Redirecionar HTTP para HTTPS (descomente após configurar SSL)
    # return 301 https://$server_name$request_uri;
    
    # Configurações de arquivo
    client_max_body_size 50M;
    client_body_buffer_size 50M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    
    # Logs
    access_log /var/log/nginx/helpdesk.access.log;
    error_log /var/log/nginx/helpdesk.error.log;
    
    # Cabeçalhos de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Proxy para aplicação Node.js
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        
        # Buffer settings
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # Servir arquivos de upload diretamente
    location /uploads/ {
        alias /home/helpdesk/app/uploads/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Segurança para uploads
        add_header X-Content-Type-Options nosniff;
        location ~* \.(php|jsp|pl|py|cgi|sh)$ {
            deny all;
            return 403;
        }
    }
    
    # Favicon e robots.txt
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
    
    # Assets estáticos (CSS, JS, imagens)
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
        access_log off;
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/javascript
        application/xml+rss
        application/json
        application/manifest+json
        application/vnd.ms-fontobject
        font/truetype
        font/opentype
        image/svg+xml;
    
    # Rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Configuração HTTPS (descomente após obter certificado SSL)
# server {
#     listen 443 ssl http2;
#     server_name seu-dominio.com www.seu-dominio.com;
# 
#     # Certificados SSL (gerados pelo Certbot)
#     ssl_certificate /etc/letsencrypt/live/seu-dominio.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/seu-dominio.com/privkey.pem;
# 
#     # Configurações SSL modernas
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
# 
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# 
#     # Resto da configuração igual ao HTTP...
# }

# Rate limiting zone (adicione no bloco http principal do nginx.conf)
# http {
#     limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
# }